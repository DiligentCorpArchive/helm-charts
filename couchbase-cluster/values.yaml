# Default values for couchbase-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# cluster config
cluster:
  # create flag to deploy couchbase cluster
  create: true
  # name of the cluster. defaults to name of chart release
  name:
  # image is the base couchbase image and version of the couchbase cluster
  image: "couchbase/server:6.5.0"
  security:
    # username of the cluster admin.
    username: Administrator
    # password of the cluster admin.
    # auto-generated when empty
    password:
    # adminSecret is name of secret to use instead of using
    # the default secret with username and password specified above
    adminSecret:
    rbac:
      managed: true
  # networking options
  networking:
    # Option to expose admin console
    exposeAdminConsole: true
    # Option to expose admin console
    adminConsoleServices:
      - data
    # Specific services to use when exposing ui
    exposedFeatures:
      - client
      - xdcr
    # Defines how the admin console service is exposed.
    # Allowed values are NodePort and LoadBalancer.
    # If this field is LoadBalancer then you must also define a spec.dns.domain.
    adminConsoleServiceType: NodePort
    # Defines how the per Couchbase node ports are exposed.
    # Allowed values are NodePort and LoadBalancer.
    # If this field is LoadBalancer then you must also define a spec.dns.domain.
    exposedFeatureServiceType: NodePort
    # The dynamic DNS configuration to use when exposing services
    dns:
    # The Couchbase cluster tls configuration (auto-generated)
    tls:
  # The retention period that log volumes are kept for after their associated pods have been deleted.
  logRetentionTime: 604800s
  # The maximum number of log volumes that can be kept after their associated pods have been deleted.
  logRetentionCount: 20
  # xdcr defines remote clusters and replications to them.
  xdcr:
    # managed defines whether the Operator should manage XDCR remote clusters
    managed: false
    # remoteClusters contains references to any remote clusters to replicate to
    remoteClusters:
  # backup defines values for automated backup.
  backup:
    # managed determines whether Automated Backup is enabled
    managed: true
    # image used by the Operator to perform backup or restore
    image: couchbase/operator-backup:6.5.0
    # optional service account to use when performing backups
    serviceAccountName:
  # defines integration with third party monitoring sofware
  monitoring:
    prometheus:
      # defines whether Prometheus metric collection is enabled
      enabled: false
      # image used by the Operator to perform metric collection
      # (injected as a "sidecar" in each Couchbase Server Pod)
      image: couchbase/prometheus-exporter:1.0.0
      # Optional Kubernetes secret that clients use to access Prometheus metrics
      authorizationSecret:
  # Cluster wide settings for nodes and services
  cluster:
    # The amount of memory that should be allocated to the data service
    dataServiceMemoryQuota: 256Mi
    # The amount of memory that should be allocated to the index service
    indexServiceMemoryQuota: 256Mi
    # The amount of memory that should be allocated to the search service
    searchServiceMemoryQuota: 256Mi
    # The amount of memory that should be allocated to the eventing service
    eventingServiceMemoryQuota: 256Mi
    # The amount of memory that should be allocated to the analytics service
    analyticsServiceMemoryQuota: 1Gi
    # The index storage mode to use for secondary indexing
    indexStorageSetting: memory_optimized
    # Timeout that expires to trigger the auto failover.
    autoFailoverTimeout: 120s
    # The number of failover events we can tolerate
    autoFailoverMaxCount: 3
    # Whether to auto failover if disk issues are detected
    autoFailoverOnDataDiskIssues: true
    # How long to wait for transient errors before failing over a faulty disk
    autoFailoverOnDataDiskIssuesTimePeriod: 120s
    # Whether to enable failing over a server group
    autoFailoverServerGroup: false

  # cluster buckets
  buckets:
    # Managed defines whether buckets are managed by us or the clients.
    managed: true
  servers:
    # Name for the server configuration. It must be unique.
    default:
      # Size of the couchbase cluster.
      size: 3
      # The services to run on nodes
      services:
        - data
        - index
        - query
        - search
        - analytics
        - eventing
      # ServerGroups define the set of availability zones we want to distribute pods over.
      serverGroups: []
      # Pod defines the policy to create pod for the couchbase pod.
      pod: {}
  # Security Context for all pods
  securityContext: {}
  # VolumeClaimTemplates define the desired characteristics of a volume
  # that can be requested and claimed by a pod.
  volumeClaimTemplates: []

# couchbase buckets to create
# disable default bucket creation by setting
# couchbaseBuckets.default: null
#
# setting default to null throws warning https://github.com/helm/helm/issues/5184
buckets:
  # A bucket to create by default
  default:
    # Name of the bucket
    name: default
    # The type of bucket to use
    type: couchbase
    # The amount of memory that should be allocated to the bucket
    memoryQuota: 128Mi
    # The number of bucket replicates
    replicas: 1
    # The priority when compared to other buckets
    ioPriority: high
    # The bucket eviction policy which determines behavior during expire and high mem usage
    evictionPolicy: fullEviction
    # The bucket's conflict resolution mechanism; which is to be used if a conflict occurs during Cross Data-Center Replication (XDCR). Sequence-based and timestamp-based mechanisms are supported.
    conflictResolution: seqno
    # The enable flush option denotes wether the data in the bucket can be flushed
    enableFlush: true
    # Enable Index replica specifies whether or not to enable view index replicas for this bucket.
    enableIndexReplica: false
    # data compression mode for the bucket to run in [off, passive, active]
    compressionMode: "passive"

# TLS Certs that will be used to encrypt traffic between operator and couchbase
tls:
  # enable to auto create certs
  generate: false
  # Expiry time of CA in days for generated certs
  expiration: 365

# syncGateway configuration
syncGateway:
  # create flag to deploy sync gateway
  create: false
  # name of the sync gatway pod.
  # defaults to name of chart
  name:
  # database config
  config:
    logging:
      console:
        enabled: true
        log_level: "debug"
        log_keys:
        - "*"
    # databases is a list containing
    # bucket replication configs
    databases:
      db:
        # bucket replicated to sync gateway
        bucket: default
        # guest user config
        users:
          GUEST:
            # disable creation of guest user
            disabled: false
            # channels guest user may access.
            # defaults to all channels
            admin_channels: ["*"]
        # server to connect db to, defaults to cluster server
        server:
        # username of db admin, defaults to cluster admin username
        username:
        # password of db admin, defaults to cluster admin password
        password:
        allow_conflicts: false
        revs_limit: 20
        enable_shared_bucket_access: true
  # Type of service to use for exposing Sync Gateway
  # Set as empty string to prevent service creation
  exposeServiceType: ClusterIP
  # image of the sync gateway container
  image:
    repository: couchbase/sync-gateway
    tag: 2.7.0-enterprise
  imagePullPolicy: IfNotPresent
  # Optional secret to use with prepoulated database config
  configSecret:
  # optional ca.cert for tls connection
  # of all databases
  cacert:
  # optional dns config
  dns:
    # name kubernete service which exposes nameserver (ie coredns)
    service:
    # search list for host-name lookup
    searches:
    - default.svc.cluster.local
    - svc.cluster.local
    - cluster.local
